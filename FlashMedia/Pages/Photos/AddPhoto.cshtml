@page
@model FlashMedia.Pages.Photos.AddPhotoModel
@{
    ViewData["Title"] = "Add Photo";
}

<h2>Add Photo</h2>

<form method="post" enctype="multipart/form-data" onsubmit="return handleSubmit(event)">
    <input asp-for="Photo.AlbumId" hidden />

    <div>
        <label asp-for="Photo.Name"></label>
        <input asp-for="Photo.Name" />
        <span asp-validation-for="Photo.Name" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="Photo.Description"></label>
        <textarea asp-for="Photo.Description"></textarea>
        <span asp-validation-for="Photo.Description" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="Photo.Location"></label>
        <textarea asp-for="Photo.Location" id="locationInput"></textarea>
        <span asp-validation-for="Photo.Location" class="text-danger"></span>
    </div>

    <div>
        <label asp-for="Photo.CategoryId">Category:</label><br />
        <select asp-for="Photo.CategoryId" asp-items="Model.Categories"></select><br />
        <span asp-validation-for="Photo.CategoryId" class="text-danger"></span>
    </div>

    <div>
        <label for="UploadedFile">Upload Image</label>
        <input asp-for="UploadedFile" type="file" onchange="previewImage(event)" />
        <span asp-validation-for="UploadedFile"></span>
    </div>
    <canvas id="imageCanvas" style="display: none;"></canvas>
    <div style="display: flex; gap: 20px; align-items: start; margin-top: 10px;">
        <img id="imagePreview" src="#" alt="Preview" style="display: none; max-height: 300px;" />
        <div id="editorPanel" style="display: none;">
            <label for="brightnessRange">Brightness:</label><br />
            <input type="range" id="brightnessRange" min="0" max="200" value="100" oninput="adjustImage()" /><br />

            <label for="contrastRange">Contrast:</label><br />
            <input type="range" id="contrastRange" min="0" max="200" value="100" oninput="adjustImage()" /><br />

            <button type="button" onclick="resetFilters()">Reset Filters</button>
        </div>
    </div>


    <input type="hidden" name="Latitude" id="hiddenLatitude" />
    <input type="hidden" name="Longitude" id="hiddenLongitude" />

    <button type="submit" class="btn btn-primary">Upload Photo</button>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
                function previewImage(event) {
            const input = event.target;
            const preview = document.getElementById('imagePreview');
            const editorPanel = document.getElementById('editorPanel');

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                    editorPanel.style.display = 'block';

                    document.getElementById('brightnessRange').value = 100;
                    document.getElementById('contrastRange').value = 100;
                    preview.style.filter = 'brightness(100%) contrast(100%)';
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        function adjustImage() {
            const brightness = document.getElementById('brightnessRange').value;
            const contrast = document.getElementById('contrastRange').value;
            const preview = document.getElementById('imagePreview');
            preview.style.filter = `brightness(${brightness}%) contrast(${contrast}%)`;
        }

        async function handleSubmit(event) {
            event.preventDefault();

            // Setează lat/long
            const location = document.getElementById('locationInput').value;
            if (location) {
                const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}`, {
                    headers: { 'User-Agent': 'FlashMediaApp/1.0' }
                });
                const data = await response.json();
                if (data && data.length > 0) {
                    document.getElementById('hiddenLatitude').value = data[0].lat;
                    document.getElementById('hiddenLongitude').value = data[0].lon;
                } else {
                    alert("Location not found.");
                    return false;
                }
            }

            // Prelucrează imaginea în canvas
            const image = document.getElementById('imagePreview');
            const canvas = document.getElementById('imageCanvas');
            const ctx = canvas.getContext('2d');

            const brightness = document.getElementById('brightnessRange').value;
            const contrast = document.getElementById('contrastRange').value;

            // Set canvas size
            canvas.width = image.naturalWidth;
            canvas.height = image.naturalHeight;

            // Aplică filtre
            ctx.filter = `brightness(${brightness}%) contrast(${contrast}%)`;
            ctx.drawImage(image, 0, 0);

            canvas.toBlob(async function (blob) {
                const formData = new FormData(event.target);

                // Înlocuiește fișierul original
                formData.set("UploadedFile", blob, "edited.png");

                const response = await fetch("", {
                    method: "POST",
                    body: formData
                });

                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    alert("Something went wrong!");
                }
            }, "image/png");
        }

    </script>
}
